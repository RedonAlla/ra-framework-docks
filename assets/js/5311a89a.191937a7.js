"use strict";(self.webpackChunkra_framework_docks=self.webpackChunkra_framework_docks||[]).push([[4288],{15735:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>h,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>m});var n=t(74848),o=t(28453),a=t(49489),l=t(7227);const s={id:"ra-theme-dark-mod-theme",sidebar_position:4,last_update:{date:"1/1/2000",author:"Redon Alla"}},c="Dark Mod Theme",i={id:"theme/ra-theme-dark-mod-theme",title:"Dark Mod Theme",description:"To support dark mode you must extend ThemeProvider and implement onAppearanceChange method or you can create you own ThemeContext.",source:"@site/docs/theme/dark-mod-theme.mdx",sourceDirName:"theme",slug:"/theme/ra-theme-dark-mod-theme",permalink:"/docs/theme/ra-theme-dark-mod-theme",draft:!1,unlisted:!1,editUrl:"https://github.com/RedonAlla/ra-framework-docks/docs/theme/dark-mod-theme.mdx",tags:[],version:"current",lastUpdatedBy:"Redon Alla",lastUpdatedAt:9466812e5,sidebarPosition:4,frontMatter:{id:"ra-theme-dark-mod-theme",sidebar_position:4,last_update:{date:"1/1/2000",author:"Redon Alla"}},sidebar:"componentsSidebar",previous:{title:"Consuming Themes",permalink:"/docs/theme/ra-theme-consuming-theme"},next:{title:"Multiple Themes",permalink:"/docs/theme/ra-theme-multiple-themes"}},h={},m=[];function u(e){const r={a:"a",code:"code",em:"em",h1:"h1",header:"header",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsx)(r.h1,{id:"dark-mod-theme",children:"Dark Mod Theme"})}),"\n",(0,n.jsxs)(r.p,{children:["To support dark mode you must extend ",(0,n.jsx)(r.strong,{children:(0,n.jsx)(r.a,{href:"/docs/getting-gtarted/setup-ra-theme-provider#using-themeprovider",children:"ThemeProvider"})})," and implement ",(0,n.jsx)(r.code,{children:"onAppearanceChange"})," method or you can create you own ",(0,n.jsx)(r.em,{children:"ThemeContext"}),"."]}),"\n",(0,n.jsx)(r.p,{children:"Below example shows how to extend ThemeProvider and implement setColorScheme method to support to dark mode."}),"\n","\n",(0,n.jsxs)(a.A,{children:[(0,n.jsx)(l.A,{value:"colors-file",label:"colors",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="/src/theme/colors.ts" showLineNumbers',children:"import { ColorValue } from 'react-native';\r\n// highlight-start\r\nimport { dark, light, BaseTheme } from 'ra-theme-context';\r\n// highlight-end\r\n\r\nexport interface MyColorsColors extends BaseTheme {\r\n  color1: ColorValue,\r\n  color2: ColorValue\r\n};\r\n\r\nexport const lightTheme: MyColorsColors = {\r\n  ...light,\r\n  color1: '#C51162',\r\n  color2: '#7B1FA2',\r\n}\r\n\r\nexport const darkTheme: MyColorsColors = {\r\n  ...dark,\r\n  color1: '#C51162',\r\n  color2: '#7B1FA2',\r\n}\n"})})}),(0,n.jsx)(l.A,{value:"themprovider-file",label:"MyThemeProvider",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="/src/theme/MyThemeProvider.tsx" showLineNumbers',children:"import React from 'react';\r\nimport { ColorSchemeName, Appearance } from 'react-native';\r\n\r\n// highlight-start\r\nimport { ThemeProvider, BaseTheme } from 'ra-theme-context';\r\n// highlight-end\r\nimport { darkTheme, lightTheme, MyColorsColors } from './colors';\r\n\r\n\r\nexport default class MyThemeProvider extends ThemeProvider<MyColorsColors> {\r\n  async componentDidMount() {\r\n    const appThemeStorage = {\r\n      colors: this.props.colors,\r\n      colorScheme: Appearance.getColorScheme()\r\n    }; // Your default theme or read it from your storage.\r\n\r\n    Appearance.addChangeListener(this.onAppearanceChange);\r\n    this.setState({\r\n      colors: appThemeStorage.colors!,\r\n      colorScheme: appThemeStorage.colorScheme\r\n    });\r\n  }\r\n\r\n  onAppearanceChange = (colorScheme: Appearance.AppearancePreferences) => {\r\n    if(this.state.colorScheme === null)\r\n      this.setState({ ...this.state });\r\n  }\r\n\r\n  onChangeTheme = async (theme: MyColorsColors): Promise<void> => {\r\n    throw new Error('Method not implemented. See Multiple Theme section');\r\n  }\r\n\r\n  onChangeColorSchemeTheme = async (colorScheme: ColorSchemeName): Promise<void>  => {\r\n    if(colorScheme === null || colorScheme === undefined) {\r\n      const deviceSchema = Appearance.getColorScheme();\r\n\r\n      this.setState({\r\n        colorScheme: deviceSchema,\r\n        colors: deviceSchema === 'light' ? lightTheme : darkTheme,\r\n      });\r\n\r\n      // highlight-start\r\n      //Do what ever you want. ex save on db or in local storage.\r\n      // highlight-end\r\n      return;\r\n    }\r\n\r\n    // highlight-start\r\n    //Do what ever you want. ex save on db or in local storage.\r\n    // highlight-end\r\n\r\n    this.setState({\r\n      colorScheme: colorScheme,\r\n      colors: colorScheme === 'light' ? lightTheme : darkTheme,\r\n    });\r\n  }\r\n}\n"})})}),(0,n.jsx)(l.A,{value:"theme-settings-file",label:"ThemeSettings",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="/src/screens/ThemeSettings.tsx" showLineNumbers',children:"import React from 'react';\r\nimport { StyleSheet, ColorSchemeName, Pressable, View, Text, ColorValue } from 'react-native';\r\n\r\n// highlight-start\r\nimport { useThemeContext } from 'ra-theme-context';\r\n// highlight-end\r\n\r\ntype BtnToggleProps = {\r\n  title: string,\r\n  textColor: ColorValue,\r\n  borderColor: ColorValue,\r\n  backgroundColor: ColorValue,\r\n  colorScheme: ColorSchemeName,\r\n}\r\n\r\nconst BtnToggle = React.memo((props: BtnToggleProps) => {\r\n  const theme = useThemeContext();\r\n\r\n  const onChangeColorSchemeTheme = async (): Promise<void>  => {\r\n    await theme.setColorScheme!(props.colorScheme)\r\n  };\r\n\r\n  return (\r\n    <Pressable onPress={onChangeColorSchemeTheme}\r\n        style={[styles.btn, {backgroundColor: props.backgroundColor, borderColor: props.borderColor}]}>\r\n      <Text style={{fontSize: 18, color: props.textColor}}>\r\n        {props.title}\r\n      </Text>\r\n    </Pressable>\r\n  );\r\n});\r\n\r\nexport default React.memo(() => {\r\n  const theme = useThemeContext();\r\n\r\n  return (\r\n    <View style={[styles.container, {backgroundColor: theme.colors.background}]}>\r\n      <Text style={[styles.title, {color: theme.colors.text}]}>Theme Settings</Text>\r\n      <BtnToggle title='Light'\r\n                borderColor={theme.colors.border}\r\n                backgroundColor={theme.colors.light}\r\n                textColor='black'\r\n                colorScheme='light' />\r\n      <BtnToggle title='Dark'\r\n                borderColor={theme.colors.border}\r\n                backgroundColor={theme.colors.dark}\r\n                textColor=\"white\"\r\n                colorScheme='dark' />\r\n      <BtnToggle title='Automatic'\r\n                borderColor={theme.colors.border}\r\n                backgroundColor={theme.colors.light}\r\n                textColor='black'\r\n                colorScheme={null} />\r\n    </View>\r\n  );\r\n});\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    padding: 15\r\n  },\r\n  title: {\r\n    fontSize: 32,\r\n    fontWeight: 'bold',\r\n    paddingVertical: 18\r\n  },\r\n  btn: {\r\n    width: '100%',\r\n    borderStyle: 'solid',\r\n    borderWidth: 1,\r\n    paddingVertical: 15,\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    marginVertical: 15\r\n  }\r\n});\n"})})}),(0,n.jsx)(l.A,{value:"app-file",label:"App",children:(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-jsx",metastring:'title="/App.ts" showLineNumbers',children:"import React from 'react';\r\n\r\nimport ThemeSettings from './src/screens/ThemeSettings.tsx';\r\nimport MyThemeProvider from './src/theme/MyThemeProvider.tsx';\r\n\r\n\r\nexport default function App() {\r\n  return (\r\n    <MyThemeProvider>\r\n      <ThemeSettings />\r\n    </MyThemeProvider>\r\n  );\r\n}\n"})})})]})]})}function d(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(u,{...e})}):u(e)}},7227:(e,r,t)=>{t.d(r,{A:()=>l});t(96540);var n=t(34164);const o={tabItem:"tabItem_Ymn6"};var a=t(74848);function l(e){let{children:r,hidden:t,className:l}=e;return(0,a.jsx)("div",{role:"tabpanel",className:(0,n.A)(o.tabItem,l),hidden:t,children:r})}},49489:(e,r,t)=>{t.d(r,{A:()=>y});var n=t(96540),o=t(34164),a=t(24245),l=t(56347),s=t(36494),c=t(62814),i=t(45167),h=t(69900);function m(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:r}=e;return!!r&&"object"==typeof r&&"value"in r}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:r,children:t}=e;return(0,n.useMemo)((()=>{const e=r??function(e){return m(e).map((e=>{let{props:{value:r,label:t,attributes:n,default:o}}=e;return{value:r,label:t,attributes:n,default:o}}))}(t);return function(e){const r=(0,i.XI)(e,((e,r)=>e.value===r.value));if(r.length>0)throw new Error(`Docusaurus error: Duplicate values "${r.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[r,t])}function d(e){let{value:r,tabValues:t}=e;return t.some((e=>e.value===r))}function p(e){let{queryString:r=!1,groupId:t}=e;const o=(0,l.W6)(),a=function(e){let{queryString:r=!1,groupId:t}=e;if("string"==typeof r)return r;if(!1===r)return null;if(!0===r&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:r,groupId:t});return[(0,c.aZ)(a),(0,n.useCallback)((e=>{if(!a)return;const r=new URLSearchParams(o.location.search);r.set(a,e),o.replace({...o.location,search:r.toString()})}),[a,o])]}function g(e){const{defaultValue:r,queryString:t=!1,groupId:o}=e,a=u(e),[l,c]=(0,n.useState)((()=>function(e){let{defaultValue:r,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(r){if(!d({value:r,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${r}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return r}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:r,tabValues:a}))),[i,m]=p({queryString:t,groupId:o}),[g,f]=function(e){let{groupId:r}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(r),[o,a]=(0,h.Dv)(t);return[o,(0,n.useCallback)((e=>{t&&a.set(e)}),[t,a])]}({groupId:o}),b=(()=>{const e=i??g;return d({value:e,tabValues:a})?e:null})();(0,s.A)((()=>{b&&c(b)}),[b]);return{selectedValue:l,selectValue:(0,n.useCallback)((e=>{if(!d({value:e,tabValues:a}))throw new Error(`Can't select invalid tab value=${e}`);c(e),m(e),f(e)}),[m,f,a]),tabValues:a}}var f=t(11062);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var x=t(74848);function v(e){let{className:r,block:t,selectedValue:n,selectValue:l,tabValues:s}=e;const c=[],{blockElementScrollPositionUntilNextRender:i}=(0,a.a_)(),h=e=>{const r=e.currentTarget,t=c.indexOf(r),o=s[t].value;o!==n&&(i(r),l(o))},m=e=>{let r=null;switch(e.key){case"Enter":h(e);break;case"ArrowRight":{const t=c.indexOf(e.currentTarget)+1;r=c[t]??c[0];break}case"ArrowLeft":{const t=c.indexOf(e.currentTarget)-1;r=c[t]??c[c.length-1];break}}r?.focus()};return(0,x.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":t},r),children:s.map((e=>{let{value:r,label:t,attributes:a}=e;return(0,x.jsx)("li",{role:"tab",tabIndex:n===r?0:-1,"aria-selected":n===r,ref:e=>c.push(e),onKeyDown:m,onClick:h,...a,className:(0,o.A)("tabs__item",b.tabItem,a?.className,{"tabs__item--active":n===r}),children:t??r},r)}))})}function C(e){let{lazy:r,children:t,selectedValue:a}=e;const l=(Array.isArray(t)?t:[t]).filter(Boolean);if(r){const e=l.find((e=>e.props.value===a));return e?(0,n.cloneElement)(e,{className:(0,o.A)("margin-top--md",e.props.className)}):null}return(0,x.jsx)("div",{className:"margin-top--md",children:l.map(((e,r)=>(0,n.cloneElement)(e,{key:r,hidden:e.props.value!==a})))})}function T(e){const r=g(e);return(0,x.jsxs)("div",{className:(0,o.A)("tabs-container",b.tabList),children:[(0,x.jsx)(v,{...r,...e}),(0,x.jsx)(C,{...r,...e})]})}function y(e){const r=(0,f.A)();return(0,x.jsx)(T,{...e,children:m(e.children)},String(r))}},28453:(e,r,t)=>{t.d(r,{R:()=>l,x:()=>s});var n=t(96540);const o={},a=n.createContext(o);function l(e){const r=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),n.createElement(a.Provider,{value:r},e.children)}}}]);